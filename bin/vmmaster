#!/usr/bin/env python

"""vmmaster virtual machines.

Usage:
  vmmaster
  vmmaster init
  vmmaster --daemon
  vmmaster (-h | --help)
  vmmaster (-v | --version)

Options:
  -h --help     Show this screen.
  -v --version  Show version.
"""

from docopt import docopt
from threading import Thread

from vmmaster.core.config import setup_config, config
from vmmaster.core.logger import setup_logging, log
from vmmaster.core.server.server import VMMasterServer
from vmmaster.core.daemon import Daemon
from vmmaster.console.init import init, home_dir
from vmmaster.utils.utils import change_user_vmmaster


def kill_thread(thread):
    # An evil hack to kill the thread.
    # Got from http://stackoverflow.com/questions/323972/is-there-any-way-to-kill-a-thread-in-python
    # Works on cPython 2.7.x.
    from ctypes import py_object, pythonapi, c_long
    exc = py_object(SystemExit)
    pythonapi.PyThreadState_SetAsyncExc(c_long(thread.ident), exc)


def main():
    change_user_vmmaster()
    setup_config('%s/config.py' % home_dir())
    setup_logging(config.LOG_DIR)

    server_address = ('', config.PORT)
    server = VMMasterServer(server_address)
    th = Thread(target=server.run, name='vmmaster_server')
    th.daemon = True
    th.start()
    try:
        while True:
            pass
    except KeyboardInterrupt:
        kill_thread(th)
    finally:
        th.join()
        log.info("Bye!")


class VMMasterDaemon(Daemon):
    def run(self):
        main()


if __name__ == '__main__':
    arguments = docopt(__doc__, version='0.1')
    if arguments['init'] is True:
        init()

    if arguments['--daemon'] is True:
        daemon = VMMasterDaemon('/var/run/vmmaster.pid')
        daemon.start()
    else:
        main()